Проект takeeg

Архитектура

Термины

* client - экземпляр ПО на устройстве пользователя выполняющий роль клиента
* server - экземпляр ПО на устройстве имеющем бОльший аптайм и выполняющий роль "посредника" между клиентами
* client private key - приватный ключ клиента
* client public key - публичный ключ клиента
* identity card - публичный ключ и совокупность информации о клиенте подписанное его приватным ключем (ЭЦП)
* acquainted client - клиент identity card которого сохранена на текущем клиенте
* clients acquaintance - процесс обмена клиентов их identity card

Требования

* публикация на server информации о адресах текущего client (ipv4, ipv6, доменное имя, возможно адреса bluetooth и анонимных децентрализованных сетей)
* сохранение на server списка acquainted client (не acquainted client не может получить информацию о адресах клиента)
* достоверная передача identity card с одного client на другой (не допуская возможных MitM атак, т.е. например по NFC или через qr-code) процесс clients acquaintance
* передача произвольных сообщений (в т.ч. произвольного размера) между различными client серез шифрованное соединение
* заложить возможность 
** передачи сообщений через server (не дешифруя трафик, но исключая потенциальные атаки с использованием сервера)
** конференций - передачи сообщени одновременно между несколькими client, желательно исключая сервер
* хранение списка acquainted client на client
* аутентификация на server по своему ключу
* позже
** гибкая настройка действий на приходящие сообщения (в зависимости от групп в которые входит источник сообщения, его адреса и т.п.)
** опциональное шифрование данных хранящихся на client

Действия

client 
- при запуске
  - проверяет наличие приватного ключа в формате PKCS12
    - если его нет, то предоставялет пользователю возможность создать такой или загрузить в хранилище программы существующий
  - запрашивает пароль для приватного ключа (если требуется)
    _пароль может быть графическим или иным, надо разобраться что используется для этого на мобильниках_
  
 
